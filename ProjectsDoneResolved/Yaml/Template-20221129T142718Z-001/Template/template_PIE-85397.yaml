###############################################################################
#  Copyright 2013 - 2018 Software AG, Darmstadt, Germany and/or its licensors
#
#   SPDX-License-Identifier: Apache-2.0
#
#     Licensed under the Apache License, Version 2.0 (the "License");
#     you may not use this file except in compliance with the License.
#     You may obtain a copy of the License at
#
#        http://www.apache.org/licenses/LICENSE-2.0
#
#     Unless required by applicable law or agreed to in writing, software
#     distributed under the License is distributed on an "AS IS" BASIS,
#     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#     See the License for the specific language governing permissions and
#     limitations under the License.


# Commands:
#      to delete template alias if already loaded:
#                   cc delete templates composite sag-is-config --force
#      to list        cc list templates composite -e sag-is-config  is-layer-test1
#      to import :  cc exec templates composite import -i C:\Work-Space\Itrac-WS\INTERNAL-ISSUES\template_PIE-85397.yaml -s http://localhost:8200
#      to Execute : cc exec templates composite apply sag-is-config nodes=localhost is.configs=messaging is.instance.name=default -i C:\Work-Space\Itrac-WS\INTERNAL-ISSUES\template_watt.properties -s http://localhost:8200
#       
#      Explaination : 
#                   nodes=local, here local is name of SPM alias. 
#                   You can find out this in CCE UI : Home >Instances > ALL : then check for field "Installation Alias"                                                          
#
###############################################################################
alias: sag-is-config
description: Integration Server configurations

environments:
  default:
    nodes:               node
   # is.um.url:           ${}               # REQUIRED: UM realm server or cluster URL
    is.instance.name:    default           # EXISTING IS/MSR instance name
    is.um.alias:         IS_UM_CONNECTION  # Messaging connection alias to configure
    is.um.enabled:       true              # Enable Messaging connection to UM: true/false
    is.um.client.prefix: is                # Messaging connection client prefix
    is.um.client.share:  true              # Share client prefix: true/false
    is.um.jndi.alias:    DEFAULT_IS_JNDI_PROVIDER  # JNDI connection alias to configure
    is.um.jms.alias:     DEFAULT_IS_JMS_CONNECTION # JMS connection alias to configure
    is.um.jms.enabled:   true              # Enable JMS connection to UM: true/false
    is.um.jms.cf.name:   cf                # JMS connection factory name
    #extsettings.update:  watt.server.JNJ.env=PRD watt.server.jms.trigger.reuseSession=false watt.server.trigger.reuseSession=false watt.net.timeout=50 watt.test=2
    is.configs:                            # Configurations to apply
      - messaging                          # IS to UM messaging alias

layers:
  runtime:
    templates: ${is.configs}

templates:
  messaging:
    descripton: Testing watt space issue
    products:
      integrationServer:
        ${is.instance.name}:
          configuration:
            integrationServer-${instance.name}:              
              IS-SYSPROPS:
                IS-SYSPROPS:
                  UpdateSettings: ${extsettings.update}
                    watt.core.template.enableFilterHtml1=true
                    watt.core.template.enableSecureUrlRedirection1=false                 
                    watt.core.template.man=manish_new
                    watt.core.template.test=test1
                    watt.core.template.test15=Mani6
                    watt.core.template.test13=Manish
                    watt.core.template.test14=Manish_new                    
                  DeleteSettings:
                    watt.core.template.enableFilterHtml1=false
                    watt.core.template.enableSecureUrlRedirection1=false                    
                  Settings:
                    watt.server.compile=C:\SoftwareAG\SoftwareAG101\jvm\jvm\bin\javac -classpath {0} -d {1} {2}
                    watt.server.http.Content-Security-Policy=script-src 'self' 'unsafe-inline'
                    watt.server.http.X-Permitted-Cross-Domain-Policies=none
                    watt.server.jwt.maxTimeSkew=asdf
                    watt.server.ns.hideWmRoot=false
                # COMMON-SYSPROPS:
                  # COMMON-SYSPROPS:
                    # watt.core.template.enableFilterHtml=false
                    # watt.core.template.enableSecureUrlRedirection=true                 
                    # watt.net.jsse.client.enabledCipherSuiteList=${is.ext.setting.cipherSuiteList}
                    # watt.core.template.man=Manish
                                               
provision:
  default:
    runtime: ${nodes}
